import { useState, useCallback, useMemo } from "react";

const useWord = (initialLevel) => {
  const wordLists = useMemo(
    () => [
      [
        "abandon",
        "ability",
        "able",
        "about",
        "above",
        "abroad",
        "absence",
        "absolute",
        "absolutely",
        "absorb",
        "abstract",
        "abuse",
        "academic",
        "accept",
        "access",
        "accident",
        "accompany",
        "accomplish",
        "according",
        "account",
        "accurate",
        "accuse",
        "achieve",
        "achievement",
        "acknowledge",
        "acquire",
        "across",
        "act",
        "action",
        "active",
        "activity",
        "actor",
        "actress",
        "actual",
        "actually",
        "adapt",
        "add",
        "addition",
        "additional",
        "address",
        "adequate",
        "adjust",
        "administration",
        "admire",
        "admission",
        "admit",
        "adopt",
        "adult",
        "advance",
        "advanced",
      ], // Level 1
      [
        "advantage",
        "adventure",
        "advertise",
        "advertisement",
        "advice",
        "advise",
        "affair",
        "affect",
        "afford",
        "afraid",
        "after",
        "afternoon",
        "again",
        "against",
        "age",
        "agency",
        "agenda",
        "agent",
        "aggressive",
        "ago",
        "agree",
        "agreement",
        "ahead",
        "aid",
        "aim",
        "air",
        "aircraft",
        "airline",
        "airport",
        "alarm",
        "album",
        "alcohol",
        "alert",
        "alien",
        "alike",
        "alive",
        "all",
        "allege",
        "allow",
        "almost",
        "alone",
        "along",
        "already",
        "also",
        "alter",
        "alternative",
        "although",
        "always",
        "amazing",
        "ambition",
      ], // Level 2
      [
        "among",
        "amount",
        "analysis",
        "analyze",
        "ancient",
        "and",
        "anger",
        "angle",
        "angry",
        "animal",
        "anniversary",
        "announce",
        "annual",
        "another",
        "answer",
        "anticipate",
        "anxiety",
        "any",
        "anybody",
        "anymore",
        "anyone",
        "anything",
        "anyway",
        "anywhere",
        "apart",
        "apartment",
        "apologize",
        "apology",
        "apparent",
        "apparently",
        "appeal",
        "appear",
        "appearance",
        "apple",
        "application",
        "apply",
        "appoint",
        "appointment",
        "appreciate",
        "approach",
        "appropriate",
        "approval",
        "approve",
        "approximately",
        "architect",
        "area",
        "argue",
        "argument",
        "arise",
        "arm",
      ], // Level 3
    ],
    []
  );

  const generateWord = useCallback(
    (level) => {
      const newWord =
        wordLists[level - 1][
          Math.floor(Math.random() * wordLists[level - 1].length)
        ];
      return newWord;
    },
    [wordLists]
  );

  const [word, setWord] = useState(() => generateWord(initialLevel));

  const updateWord = (level) => {
    setWord(generateWord(level));
  };

  return [word, updateWord];
};

export default useWord;
